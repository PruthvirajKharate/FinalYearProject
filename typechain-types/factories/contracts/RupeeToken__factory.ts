/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  RupeeToken,
  RupeeTokenInterface,
} from "../../contracts/RupeeToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "faucet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001bca38038062001bca833981810160405281019062000037919062000412565b6040518060400160405280600881526020017f525320546f6b656e0000000000000000000000000000000000000000000000008152506040518060400160405280600281526020017f52530000000000000000000000000000000000000000000000000000000000008152508160039081620000b49190620006b4565b508060049081620000c69190620006b4565b5050506200010533620000de6200010c60201b60201c565b600a620000ec91906200092b565b83620000f991906200097c565b6200011560201b60201c565b5062000acf565b60006012905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200018a5760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040162000181919062000a0c565b60405180910390fd5b6200019e60008383620001a260201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603620001f8578060026000828254620001eb919062000a29565b92505081905550620002ce565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101562000287578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016200027e9392919062000a75565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000319578060026000828254039250508190555062000366565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620003c5919062000ab2565b60405180910390a3505050565b600080fd5b6000819050919050565b620003ec81620003d7565b8114620003f857600080fd5b50565b6000815190506200040c81620003e1565b92915050565b6000602082840312156200042b576200042a620003d2565b5b60006200043b84828501620003fb565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620004c657607f821691505b602082108103620004dc57620004db6200047e565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620005467fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000507565b62000552868362000507565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620005956200058f6200058984620003d7565b6200056a565b620003d7565b9050919050565b6000819050919050565b620005b18362000574565b620005c9620005c0826200059c565b84845462000514565b825550505050565b600090565b620005e0620005d1565b620005ed818484620005a6565b505050565b5b81811015620006155762000609600082620005d6565b600181019050620005f3565b5050565b601f82111562000664576200062e81620004e2565b6200063984620004f7565b8101602085101562000649578190505b620006616200065885620004f7565b830182620005f2565b50505b505050565b600082821c905092915050565b6000620006896000198460080262000669565b1980831691505092915050565b6000620006a4838362000676565b9150826002028217905092915050565b620006bf8262000444565b67ffffffffffffffff811115620006db57620006da6200044f565b5b620006e78254620004ad565b620006f482828562000619565b600060209050601f8311600181146200072c576000841562000717578287015190505b62000723858262000696565b86555062000793565b601f1984166200073c86620004e2565b60005b8281101562000766578489015182556001820191506020850194506020810190506200073f565b8683101562000786578489015162000782601f89168262000676565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b600185111562000829578086048111156200080157620008006200079b565b5b6001851615620008115780820291505b80810290506200082185620007ca565b9450620007e1565b94509492505050565b60008262000844576001905062000917565b8162000854576000905062000917565b81600181146200086d57600281146200087857620008ae565b600191505062000917565b60ff8411156200088d576200088c6200079b565b5b8360020a915084821115620008a757620008a66200079b565b5b5062000917565b5060208310610133831016604e8410600b8410161715620008e85782820a905083811115620008e257620008e16200079b565b5b62000917565b620008f78484846001620007d7565b925090508184048111156200091157620009106200079b565b5b81810290505b9392505050565b600060ff82169050919050565b60006200093882620003d7565b915062000945836200091e565b9250620009747fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848462000832565b905092915050565b60006200098982620003d7565b91506200099683620003d7565b9250828202620009a681620003d7565b91508282048414831517620009c057620009bf6200079b565b5b5092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620009f482620009c7565b9050919050565b62000a0681620009e7565b82525050565b600060208201905062000a236000830184620009fb565b92915050565b600062000a3682620003d7565b915062000a4383620003d7565b925082820190508082111562000a5e5762000a5d6200079b565b5b92915050565b62000a6f81620003d7565b82525050565b600060608201905062000a8c6000830186620009fb565b62000a9b602083018562000a64565b62000aaa604083018462000a64565b949350505050565b600060208201905062000ac9600083018462000a64565b92915050565b6110eb8062000adf6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806370a082311161006657806370a082311461015d5780637b56c2b21461018d57806395d89b41146101a9578063a9059cbb146101c7578063dd62ed3e146101f75761009e565b806306fdde03146100a3578063095ea7b3146100c157806318160ddd146100f157806323b872dd1461010f578063313ce5671461013f575b600080fd5b6100ab610227565b6040516100b89190610b7f565b60405180910390f35b6100db60048036038101906100d69190610c3a565b6102b9565b6040516100e89190610c95565b60405180910390f35b6100f96102dc565b6040516101069190610cbf565b60405180910390f35b61012960048036038101906101249190610cda565b6102e6565b6040516101369190610c95565b60405180910390f35b610147610315565b6040516101549190610d49565b60405180910390f35b61017760048036038101906101729190610d64565b61031e565b6040516101849190610cbf565b60405180910390f35b6101a760048036038101906101a29190610c3a565b610366565b005b6101b1610392565b6040516101be9190610b7f565b60405180910390f35b6101e160048036038101906101dc9190610c3a565b610424565b6040516101ee9190610c95565b60405180910390f35b610211600480360381019061020c9190610d91565b610447565b60405161021e9190610cbf565b60405180910390f35b60606003805461023690610e00565b80601f016020809104026020016040519081016040528092919081815260200182805461026290610e00565b80156102af5780601f10610284576101008083540402835291602001916102af565b820191906000526020600020905b81548152906001019060200180831161029257829003601f168201915b5050505050905090565b6000806102c46104ce565b90506102d18185856104d6565b600191505092915050565b6000600254905090565b6000806102f16104ce565b90506102fe8582856104e8565b61030985858561057d565b60019150509392505050565b60006012905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61038e82610372610315565b600a61037e9190610f93565b836103899190610fde565b610671565b5050565b6060600480546103a190610e00565b80601f01602080910402602001604051908101604052809291908181526020018280546103cd90610e00565b801561041a5780601f106103ef5761010080835404028352916020019161041a565b820191906000526020600020905b8154815290600101906020018083116103fd57829003601f168201915b5050505050905090565b60008061042f6104ce565b905061043c81858561057d565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b6104e383838360016106f3565b505050565b60006104f48484610447565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156105775781811015610567578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161055e9392919061102f565b60405180910390fd5b610576848484840360006106f3565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036105ef5760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016105e69190611066565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106615760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016106589190611066565b60405180910390fd5b61066c8383836108ca565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106e35760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016106da9190611066565b60405180910390fd5b6106ef600083836108ca565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036107655760006040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161075c9190611066565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107d75760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016107ce9190611066565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080156108c4578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516108bb9190610cbf565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361091c5780600260008282546109109190611081565b925050819055506109ef565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156109a8578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161099f9392919061102f565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a385780600260008282540392505081905550610a85565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610ae29190610cbf565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610b29578082015181840152602081019050610b0e565b60008484015250505050565b6000601f19601f8301169050919050565b6000610b5182610aef565b610b5b8185610afa565b9350610b6b818560208601610b0b565b610b7481610b35565b840191505092915050565b60006020820190508181036000830152610b998184610b46565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610bd182610ba6565b9050919050565b610be181610bc6565b8114610bec57600080fd5b50565b600081359050610bfe81610bd8565b92915050565b6000819050919050565b610c1781610c04565b8114610c2257600080fd5b50565b600081359050610c3481610c0e565b92915050565b60008060408385031215610c5157610c50610ba1565b5b6000610c5f85828601610bef565b9250506020610c7085828601610c25565b9150509250929050565b60008115159050919050565b610c8f81610c7a565b82525050565b6000602082019050610caa6000830184610c86565b92915050565b610cb981610c04565b82525050565b6000602082019050610cd46000830184610cb0565b92915050565b600080600060608486031215610cf357610cf2610ba1565b5b6000610d0186828701610bef565b9350506020610d1286828701610bef565b9250506040610d2386828701610c25565b9150509250925092565b600060ff82169050919050565b610d4381610d2d565b82525050565b6000602082019050610d5e6000830184610d3a565b92915050565b600060208284031215610d7a57610d79610ba1565b5b6000610d8884828501610bef565b91505092915050565b60008060408385031215610da857610da7610ba1565b5b6000610db685828601610bef565b9250506020610dc785828601610bef565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610e1857607f821691505b602082108103610e2b57610e2a610dd1565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b6001851115610eb757808604811115610e9357610e92610e31565b5b6001851615610ea25780820291505b8081029050610eb085610e60565b9450610e77565b94509492505050565b600082610ed05760019050610f8c565b81610ede5760009050610f8c565b8160018114610ef45760028114610efe57610f2d565b6001915050610f8c565b60ff841115610f1057610f0f610e31565b5b8360020a915084821115610f2757610f26610e31565b5b50610f8c565b5060208310610133831016604e8410600b8410161715610f625782820a905083811115610f5d57610f5c610e31565b5b610f8c565b610f6f8484846001610e6d565b92509050818404811115610f8657610f85610e31565b5b81810290505b9392505050565b6000610f9e82610c04565b9150610fa983610d2d565b9250610fd67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610ec0565b905092915050565b6000610fe982610c04565b9150610ff483610c04565b925082820261100281610c04565b9150828204841483151761101957611018610e31565b5b5092915050565b61102981610bc6565b82525050565b60006060820190506110446000830186611020565b6110516020830185610cb0565b61105e6040830184610cb0565b949350505050565b600060208201905061107b6000830184611020565b92915050565b600061108c82610c04565b915061109783610c04565b92508282019050808211156110af576110ae610e31565b5b9291505056fea26469706673582212206519137f1f299d033a7ef72dc75ea663f1dad6502bd01e0f7a12ba442f7cb9f564736f6c63430008140033";

type RupeeTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RupeeTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RupeeToken__factory extends ContractFactory {
  constructor(...args: RupeeTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialSupply: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialSupply, overrides || {});
  }
  override deploy(
    initialSupply: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialSupply, overrides || {}) as Promise<
      RupeeToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RupeeToken__factory {
    return super.connect(runner) as RupeeToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RupeeTokenInterface {
    return new Interface(_abi) as RupeeTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): RupeeToken {
    return new Contract(address, _abi, runner) as unknown as RupeeToken;
  }
}
